# - Specify either the New Relic license key or the secret which
#   contains it.
#
# - Specify the Kubernetes cluster name.
#   https://docs.newrelic.com/docs/kubernetes-monitoring-integration
#
# licenseKey:
# customSecretName:
# customSecretLicenseKey:
# cluster:
#
# IMPORTANT: the previous values can also be set as global so that they
# can be shared by other newrelic product's charts
#
# global:
#   licenseKey:
#   customSecretName:
#   customSecretLicenseKey:
#   cluster:
#
# kubeStateMetricsUrl - if provided, the discovery process for kube-state-metrics endpoint won't be triggered
# Only HTTP is accepted. This is an example value: http://172.17.0.3:8080
# disableKubeStateMetrics - disables KSM parsing by the DaemonSet. Defaults to "false" if not provided.

verboseLog: false

# This can be set, the default is shown below
# logFile: /var/log/nr-infra.log

image:
  repository: newrelic/infrastructure-k8s
  tag: 1.17.0
  pullPolicy: IfNotPresent

resources:
  limits:
    memory: 300M
  requests:
    cpu: 100m
    memory: 150M

privileged: true

rbac:
  # Specifies whether RBAC resources should be created
  create: true
  pspEnabled: false

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

# If you wish to provide additional labels to apply to the pod(s), specify
# them here
# podLabels:

# If you wish to provide your own newrelic.yml file include it under config:
# the sample config file is included here as an example. Some options have
# been omitted because they are handled either by variables, or a secret. They
# are display_name, license_key, log_file and verbose.
# config:
  #
  # New Relic Infrastructure configuration file
  #
  # Lines that begin with # are comment lines and are ignored by the
  # Infrastructure agent. If options have command line equivalents, New Relic
  # will use the command line option to override any value set in this file.
  #

  #
  # Option : proxy
  # Value  : Useful if your firewall rules require the agent to use a
  #          proxy URL (HTTP or HTTPS) to communicate with New Relic.
  # Default: none
  #
  # proxy: https://user:password@hostname:port

  #
  # Option : Optional custom attributes
  # Use optional key-value pairs to build filter sets, group your results,Âª
  # annotate your Insights data, etc.
  #
  # custom_attributes:
  #  environment: production
  #  service: login service
  #  team: alpha-team
  #

# Pod scheduling proirity
# Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
# priorityClassName: high-priority

# Node labels for pod assignment
# Ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

# These are default tolerations to be able to run the New Relic Kubernetes
# integration.
tolerations:
  - operator: "Exists"
    effect: "NoSchedule"
  - operator: "Exists"
    effect: "NoExecute"

updateStrategy: RollingUpdate

# Custom attributes to be passed to the New Relic agent
customAttribues: "'{\"clusterName\":\"$(CLUSTER_NAME)\"}'"

# etcdTlsSecretName: newrelic-infra-etcd-tls-secret
etcdTlsSecretNamespace: default

# If you wish to monitor services running on Kubernetes you can provide integrations
# configuration under integrations_config. You just need to create a new entry where
# the "name" is the filename of the configuration file and the data is the content of
# the integration configuration. The name must end in ".yaml" as this will be the
# filename generated and the Infrastructure agent only looks for YAML files. The data
# part is the actual integration configuration as described in the spec here:
# https://docs.newrelic.com/docs/integrations/integrations-sdk/file-specifications/integration-configuration-file-specifications-agent-v180

# For example, if you wanted do to monitor a Redis instance that has a label "app=redis"
# you could do so by adding following entry:
  # integrations_config:
  #   - name: nri-rabbit.yaml
  #     data:
  #       discovery:
  #         command:
  #           # Run NRI Discovery for Kubernetes
  #           # https://github.com/newrelic/nri-discovery-kubernetes
  #           exec: /var/db/newrelic-infra/nri-discovery-kubernetes
  #           match:
  #             label.app: redis
  #       integrations:
  #         - name: nri-redis
  #           env:
  #             # using the discovered IP as the hostname address
  #             HOSTNAME: ${discovery.ip}
  #             PORT: 6379
  #           labels:
  #             env: test
# For more details on monitoring services on Kubernetes see
# https://docs.newrelic.com/docs/integrations/kubernetes-integration/link-apps-services/monitor-services-running-kubernetes
integrations_config: 
  - name: jmx-config.yml
    data:
      # Run auto discovery to find pods with label "clusterId=operator"
      # https://docs.newrelic.com/docs/integrations/host-integrations/installation/container-auto-discovery
      discovery:
        command:
          # Run NRI Discovery for Kubernetes
          # https://github.com/newrelic/nri-discovery-kubernetes
          exec: /var/db/newrelic-infra/nri-discovery-kubernetes
          match:
            label.clusterId: operator
      integrations:
        - name: nri-jmx
          env:
            # Using the discovered IP as the host address
            JMX_HOST: ${discovery.ip}
            JMX_PORT: 7203
            COLLECTION_FILES: ${config.path}
          config:
            collect:
              - domain: kafka.server
                event_type: KafkaServer
                beans:
                  - query: "type=BrokerTopicMetrics,name=BytesInPerSec"
                    attributes:
                      - "MeanRate"
                      - "OneMinuteRate"
                      - "FiveMinuteRate"
                      - "FifteenMinuteRate"
                      - "Count"
                  - query: "type=BrokerTopicMetrics,name=BytesOutPerSec"
                    attributes:
                      - "MeanRate"
                      - "OneMinuteRate"
                      - "FiveMinuteRate"
                      - "FifteenMinuteRate"
                      - "Count"
                  - query: "type=BrokerTopicMetrics,name=MessagesInPerSec"
                    attributes:
                      - "MeanRate"
                      - "OneMinuteRate"
                      - "FiveMinuteRate"
                      - "FifteenMinuteRate"
                      - "Count"
                  - query: "type=ReplicaManager,*"
                    attributes:
                      - "Value"
                      - "MeanRate"
                      - "OneMinuteRate"
                      - "FiveMinuteRate"
                      - "FifteenMinuteRate"
                      - "Count"
                  - query: "type=ReplicaFetcherManager,name=MaxLag,clientId=Replica"
                    attributes:
                      - "Value"
                  - query: "type=ProducerRequestPurgatory,name=PurgatorySize"
                    attributes:
                      - "Value"
                  - query: "type=FetchRequestPurgatory,name=PurgatorySize"
                    attributes:
                      - "Value"
                  - query: "type=KafkaRequestHandlerPool,name=RequestHandlerAvgIdlePercent"
                    attributes:
                      - "MeanRate"
                      - "OneMinuteRate"
                      - "FiveMinuteRate"
                      - "FifteenMinuteRate"
                      - "Count"
              - domain: kafka.network
                event_type: KafkaNetwork
                beans:
                  - query: "type=RequestMetrics,name=RequestsPerSec,*"
                    attributes:
                      - "MeanRate"
                      - "OneMinuteRate"
                      - "FiveMinuteRate"
                      - "FifteenMinuteRate"
                      - "Count"
                  - query: "type=RequestMetrics,name=TotalTimeMs,*"
                    attributes:
                      - "Mean"
                      - "Max"
                      - "75thPercentile"
                      - "95thPercentile"
                      - "98thPercentile"
                      - "99thPercentile"
                      - "Count"
                  - query: "type=RequestMetrics,name=LocalTimeMs,*"
                    attributes:
                      - "Mean"
                      - "Max"
                      - "75thPercentile"
                      - "95thPercentile"
                      - "98thPercentile"
                      - "99thPercentile"
                      - "Count"
                  - query: "type=RequestMetrics,name=RemoteTimeMs,*"
                    attributes:
                      - "Mean"
                      - "Max"
                      - "75thPercentile"
                      - "95thPercentile"
                      - "98thPercentile"
                      - "99thPercentile"
                      - "Count"
                  - query: "type=RequestMetrics,name=ResponseQueueTimeMs,*"
                    attributes:
                      - "Mean"
                      - "Max"
                      - "75thPercentile"
                      - "95thPercentile"
                      - "98thPercentile"
                      - "99thPercentile"
                      - "Count"
                  - query: "type=RequestMetrics,name=RequestQueueTimeMs,*"
                    attributes:
                      - "Mean"
                      - "Max"
                      - "75thPercentile"
                      - "95thPercentile"
                      - "98thPercentile"
                      - "99thPercentile"
                      - "Count"
                  - query: "type=RequestMetrics,name=ResponseSendTimeMs,*"
                    attributes:
                      - "Mean"
                      - "Max"
                      - "75thPercentile"
                      - "95thPercentile"
                      - "98thPercentile"
                      - "99thPercentile"
                      - "Count"
                  - query: "type=SocketServer,name=NetworkProcessorAvgIdlePercent"
                    attributes:
                      - "Value"
              - domain: kafka.log
                event_type: KafkaLog
                beans:
                  - query: "type=LogFlushStats,name=LogFlushRateAndTimeMs"
                    attributes:
                      - "OneMinuteRate"
                      - "FiveMinuteRate"
                      - "FifteenMinuteRate"
                      - "Mean"
                      - "98thPercentile"
                      - "Max"
              - domain: kafka.controller
                event_type: KafkaController
                beans:
                  - query: "type=LogFlushStats,name=LogFlushRateAndTimeMs"
                    attributes:
                      - "Value"
                  - query: "type=ControllerStats,*"
                    attributes:
                      - "OneMinuteRate"
                      - "FiveMinuteRate"
                      - "FifteenMinuteRate"
                      - "Mean"
                      - "98thPercentile"
                      - "Max"
              - domain: org.apache.ZooKeeperService
                event_type: ZookeeperService
                beans:
                  - query: "*"
              - domain: kafka.connect
                event_type: KafkaConnect
                beans:
                  - query: "type=connector-metrics,*"
                  - query: "type=task-metrics,*"
                  - query: "type=source-task-metrics,*"
                  - query: "type=sink-task-metrics,*"
                  - query: "type=source-task-metrics,*"
                  - query: "type=sink-task-metrics,*"
                  - query: "type=connect-worker-metrics"
                  - query: "type=connect-worker-rebalance-metrics"
              - domain: kafka.stream
                event_type: KafkaStreams
                beans:
                  - query: "type=stream-metrics,*"
                  - query: "type=stream-task-metrics,*"
                  - query: "type=stream-processor-node-metrics,*"
                  - query: "type=stream-*"
                  - query: "type=stream-record-cache-metrics,*"
              - domain: kafka.rest
                event_type: KafkaRest
                beans:
                  - query: "type=jetty-metrics,*"
                  - query: "type=jersey-metrics,*"
              - domain: kafka.schema.registry
                eventType: SchemaRegistry
                beans:
                  - query: "type=jetty-metrics"
                  - query: "type=master-slave-role"
                  - query: "type=jersey-metrics"
              - domain: kafka.consumer
                eventType: KafkaConsumer
                beans:
                  - query: "kafka.consumer:type=consumer-node-metrics,client-id=*,node-id=*"
                  - query: "type=consumer-fetch-manager-metrics,client-id=*"
                  - query: "type=consumer-fetch-manager-metrics,client-id=*,topic=*"
                  - query: "type=consumer-coordinator-metrics,client-id=*"
                  - query: "type=consumer-metrics,client-id=*"
                  - query: "kafka.consumer:type=consumer-metrics,client-id=*"
              - domain: java.lang
                event_type: JVMMetrics
                beans:
                  - query: type=GarbageCollector,name=*
                    attributes:
                      - CollectionCount
                      - CollectionTime
                  - query: type=Memory
                    attributes:
                      - HeapMemoryUsage.Committed
                      - HeapMemoryUsage.Init
                      - HeapMemoryUsage.Max
                      - HeapMemoryUsage.Used
                      - NonHeapMemoryUsage.Committed
                      - NonHeapMemoryUsage.Init
                      - NonHeapMemoryUsage.Max
                      - NonHeapMemoryUsage.Used
                  - query: type=Threading
                    attributes:
                      - ThreadCount
                      - TotalStartedThreadCount
                  - query: type=ClassLoading
                    attributes:
                      - LoadedClassCount
                  - query: type=Compilation
                    attributes:
                      - TotalCompilationTime
                  - query: type=OperatingSystem
                    attributes:
                      - SystemLoadAverage
                      - AvailableProcessors
                      - TotalPhysicalMemorySize
                      - FreePhysicalMemorySize
                      - TotalSwapSpaceSize
                      - FreeSwapSpaceSize
                      - OpenFileDescriptorCount
                      - MaxFileDescriptorCount
          labels:
            env: staging